C Program to Create a Random Graph Using Random Edge Generation


#include<stdio.h>
#include<stdlib.h>
#include <time.h>
 
#define MAX_VERTICES 30
#define MAX_EDGES 10

typedef unsigned char vertex;
 
int main(){
 
    
    srand ( time(NULL) );
    int numberOfVertices = rand() % MAX_VERTICES;
 

    srand ( time(NULL) );
    int maxNumberOfEdges = rand() % MAX_EDGES;

    if( numberOfVertices == 0)
        numberOfVertices++;
    vertex ***graph;
    printf("Total Vertices = %d, Max # of Edges = %d\n",numberOfVertices, maxNumberOfEdges);
 

    if ((graph = (vertex ***) malloc(sizeof(vertex **) * numberOfVertices)) == NULL){
        printf("Could not allocate memory for graph\n");
        exit(1);
    }
 

    int vertexCounter = 0;

    int edgeCounter = 0;
 
    for (vertexCounter = 0; vertexCounter < numberOfVertices; vertexCounter++){
        if ((graph[vertexCounter] = (vertex **) malloc(sizeof(vertex *) * maxNumberOfEdges)) == NULL){
            printf("Could not allocate memory for edges\n");
            exit(1);
        }
        for (edgeCounter = 0; edgeCounter < maxNumberOfEdges; edgeCounter++){
            if ((graph[vertexCounter][edgeCounter] = (vertex *) malloc(sizeof(vertex))) == NULL){
                printf("Could not allocate memory for vertex\n");
                exit(1);
            }
        }
    }
 

    vertexCounter = 0;edgeCounter = 0;
    for (vertexCounter = 0; vertexCounter < numberOfVertices; vertexCounter++){
        printf("%d:\t",vertexCounter);
        for (edgeCounter=0; edgeCounter < maxNumberOfEdges; edgeCounter++){
            if (rand()%2 == 1){ /*link the vertices*/
                int linkedVertex = rand() % numberOfVertices;
                graph[vertexCounter][edgeCounter] = graph[linkedVertex];
                printf("%d, ", linkedVertex);
            }
            else{ 
                graph[vertexCounter][edgeCounter] = NULL;
            }
        }
        printf("\n");
    }
    return 1;
}